mysql> create database movie
    -> ;
Query OK, 1 row affected (0.01 sec)

mysql> use movie;
Database changed
mysql> DROP TABLE IF EXISTS Movie;
Query OK, 0 rows affected, 1 warning (0.01 sec)

mysql> CREATE TABLE Movie (
    ->     m_id INT PRIMARY KEY,
    ->     title VARCHAR(255),
    ->     release_date DATE,
    ->     m_rank INT
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql>
mysql> ALTER TABLE Movie
    -> ADD COLUMN budget INT;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> DROP TABLE IF EXISTS Director;
Query OK, 0 rows affected, 1 warning (0.00 sec)

mysql> CREATE TABLE Director (
    ->     d_id INT PRIMARY KEY,
    ->     fname VARCHAR(255),
    ->     lname VARCHAR(255),
    ->     gender VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Direct (
    ->     m_id INT,
    ->     d_id INT,
    ->     FOREIGN KEY (m_id) REFERENCES Movie(m_id),
    ->     FOREIGN KEY (d_id) REFERENCES Director(d_id)
    -> );
Query OK, 0 rows affected (0.02 sec)

mysql> CREATE TABLE Actor (
    ->     a_id INT PRIMARY KEY,
    ->     f_name VARCHAR(255),
    ->     l_name VARCHAR(255)
    -> );
Query OK, 0 rows affected (0.01 sec)

mysql> CREATE TABLE Cast (
    ->     m_id INT,
    ->     a_id INT,
    ->     role VARCHAR(255),
    ->     FOREIGN KEY (m_id) REFERENCES Movie(m_id),
    ->     FOREIGN KEY (a_id) REFERENCES Actor(a_id)
    -> );
Query OK, 0 rows affected (0.01 sec)

111111111111111111111111111111111111111111111111111111111

mysql> INSERT INTO Movie (m_id, title, release_date, m_rank, budget)
    -> VALUES
    ->     (1, 'Sholay', '1975-08-15', 92, 25000000),
    ->     (2, 'K3G', '2001-12-14', 75, 13000000),
    ->     (3, 'Inception', '2010-07-16', 88, 160000000),
    ->     (4, 'Avatar', '2009-12-18', 78, 237000000),
    ->     (5, 'The Matrix', '1999-03-31', 87, 63000000);
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Director (d_id, fname, lname, gender)
    -> VALUES
    ->     (1, 'Ramesh', 'Sippy', 'Male'),
    ->     (2, 'Karan', 'Johar', 'Male'),
    ->     (3, 'Christopher', 'Nolan', 'Male'),
    ->     (4, 'James', 'Cameron', 'Male'),
    ->     (5, 'Lana', 'Wachowski', 'Female');
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Direct (m_id, d_id)
    -> VALUES
    ->     (1, 1),
    ->     (2, 2),
    ->     (3, 3),
    ->     (4, 4),
    ->     (5, 5);
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Actor (a_id, f_name, l_name)
    -> VALUES
    ->     (1, 'Amitabh', 'Bachchan'),
    ->     (2, 'Dharmendra', 'Deol'),
    ->     (3, 'Hrithik', 'Roshan'),
    ->     (4, 'Leonardo', 'DiCaprio'),
    ->     (5, 'Keanu', 'Reeves');
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> INSERT INTO Cast (m_id, a_id, role)
    -> VALUES
    ->     (1, 1, 'Veeru'),
    ->     (1, 2, 'Jai'),
    ->     (2, 3, 'Rohan'),
    ->     (3, 4, 'Cobb'),
    ->     (4, 5, 'Neo');
Query OK, 5 rows affected (0.00 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM Movie;
+------+------------+--------------+--------+-----------+
| m_id | title      | release_date | m_rank | budget    |
+------+------------+--------------+--------+-----------+
|    1 | Sholay     | 1975-08-15   |     92 |  25000000 |
|    2 | K3G        | 2001-12-14   |     75 |  13000000 |
|    3 | Inception  | 2010-07-16   |     88 | 160000000 |
|    4 | Avatar     | 2009-12-18   |     78 | 237000000 |
|    5 | The Matrix | 1999-03-31   |     87 |  63000000 |
+------+------------+--------------+--------+-----------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM Direct;
+------+------+
| m_id | d_id |
+------+------+
|    1 |    1 |
|    2 |    2 |
|    3 |    3 |
|    4 |    4 |
|    5 |    5 |
+------+------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM Director;
+------+-------------+-----------+--------+
| d_id | fname       | lname     | gender |
+------+-------------+-----------+--------+
|    1 | Ramesh      | Sippy     | Male   |
|    2 | Karan       | Johar     | Male   |
|    3 | Christopher | Nolan     | Male   |
|    4 | James       | Cameron   | Male   |
|    5 | Lana        | Wachowski | Female |
+------+-------------+-----------+--------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM Actor;
+------+------------+----------+
| a_id | f_name     | l_name   |
+------+------------+----------+
|    1 | Amitabh    | Bachchan |
|    2 | Dharmendra | Deol     |
|    3 | Hrithik    | Roshan   |
|    4 | Leonardo   | DiCaprio |
|    5 | Keanu      | Reeves   |
+------+------------+----------+
5 rows in set (0.00 sec)

mysql> SELECT * FROM Cast;
+------+------+-------+
| m_id | a_id | role  |
+------+------+-------+
|    1 |    1 | Veeru |
|    1 |    2 | Jai   |
|    2 |    3 | Rohan |
|    3 |    4 | Cobb  |
|    4 |    5 | Neo   |
+------+------+-------+
5 rows in set (0.00 sec)


22222222222222222222222222222222222222222222222222222222222

mysql> INSERT INTO Movie (m_id, title, release_date)
    -> VALUES
    ->     (6, 'New Movie', '2023-01-01');
Query OK, 1 row affected (0.01 sec)

333333333333333333333333333333333333333333333333333333333333 


mysql> SELECT * FROM Movie;
+------+------------+--------------+--------+-----------+
| m_id | title      | release_date | m_rank | budget    |
+------+------------+--------------+--------+-----------+
|    1 | Sholay     | 1975-08-15   |     92 |  25000000 |
|    2 | K3G        | 2001-12-14   |     75 |  13000000 |
|    3 | Inception  | 2010-07-16   |     88 | 160000000 |
|    4 | Avatar     | 2009-12-18   |     78 | 237000000 |
|    5 | The Matrix | 1999-03-31   |     87 |  63000000 |
|    6 | New Movie  | 2023-01-01   |   NULL |      NULL |
+------+------------+--------------+--------+-----------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM Movie;
+------+------------+--------------+--------+-----------+
| m_id | title      | release_date | m_rank | budget    |
+------+------------+--------------+--------+-----------+
|    1 | Sholay     | 1975-08-15   |     92 |  25000000 |
|    2 | K3G        | 2001-12-14   |     75 |  13000000 |
|    3 | Inception  | 2010-07-16   |     88 | 160000000 |
|    4 | Avatar     | 2009-12-18   |     78 | 237000000 |
|    5 | The Matrix | 1999-03-31   |     87 |  63000000 |
|    6 | New Movie  | 2023-01-01   |   NULL |      NULL |
+------+------------+--------------+--------+-----------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM Actor;
+------+------------+----------+
| a_id | f_name     | l_name   |
+------+------------+----------+
|    1 | Amitabh    | Bachchan |
|    2 | Dharmendra | Deol     |
|    3 | Hrithik    | Roshan   |
|    4 | Leonardo   | DiCaprio |
|    5 | Keanu      | Reeves   |
+------+------------+----------+
5 rows in set (0.00 sec)

4444444444444444444444444444444444444444444444444

mysql> SELECT m_id, title FROM Movie;
+------+------------+
| m_id | title      |
+------+------------+
|    1 | Sholay     |
|    2 | K3G        |
|    3 | Inception  |
|    4 | Avatar     |
|    5 | The Matrix |
|    6 | New Movie  |
+------+------------+
6 rows in set (0.00 sec)


55555555555555555555555555555555555555555555555555555555555555

mysql> SELECT Movie.*, Director.*
    -> FROM Movie
    -> INNER JOIN Direct ON Movie.m_id = Direct.m_id
    -> INNER JOIN Director ON Direct.d_id = Director.d_id
    -> WHERE Director.fname = 'Yash' AND Director.lname = 'Chopra';
Empty set (0.00 sec)

mysql> SELECT Movie.*, Director.*
    -> FROM Movie
    -> INNER JOIN Direct ON Movie.m_id = Direct.m_id
    -> INNER JOIN Director ON Direct.d_id = Director.d_id
    -> WHERE Director.fname = 'Karan' AND Director.lname = 'Johar';
+------+-------+--------------+--------+----------+------+-------+-------+--------+
| m_id | title | release_date | m_rank | budget   | d_id | fname | lname | gender |
+------+-------+--------------+--------+----------+------+-------+-------+--------+
|    2 | K3G   | 2001-12-14   |     75 | 13000000 |    2 | Karan | Johar | Male   |
+------+-------+--------------+--------+----------+------+-------+-------+--------+
1 row in set (0.00 sec)

66666666666666666666666666666666666666666666666666666666666666

mysql> SELECT DISTINCT f_name, l_name FROM Actor;
+------------+----------+
| f_name     | l_name   |
+------------+----------+
| Amitabh    | Bachchan |
| Dharmendra | Deol     |
| Hrithik    | Roshan   |
| Leonardo   | DiCaprio |
| Keanu      | Reeves   |
+------------+----------+
5 rows in set (0.00 sec)

7777777777777777777777777777777777777777


mysql> UPDATE Movie
    -> SET release_date = '1975-12-31'
    -> WHERE title = 'Sholay';
Query OK, 1 row affected (0.00 sec)
Rows matched: 1  Changed: 1  Warnings: 0

mysql> ALTER TABLE Actor
    -> ADD COLUMN Pay INT;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select * from movie;
+------+------------+--------------+--------+-----------+
| m_id | title      | release_date | m_rank | budget    |
+------+------------+--------------+--------+-----------+
|    1 | Sholay     | 1975-12-31   |     92 |  25000000 |
|    2 | K3G        | 2001-12-14   |     75 |  13000000 |
|    3 | Inception  | 2010-07-16   |     88 | 160000000 |
|    4 | Avatar     | 2009-12-18   |     78 | 237000000 |
|    5 | The Matrix | 1999-03-31   |     87 |  63000000 |
|    6 | New Movie  | 2023-01-01   |   NULL |      NULL |
+------+------------+--------------+--------+-----------+
6 rows in set (0.00 sec)

mysql> select * from Actor;
+------+------------+----------+------+
| a_id | f_name     | l_name   | Pay  |
+------+------------+----------+------+
|    1 | Amitabh    | Bachchan | NULL |
|    2 | Dharmendra | Deol     | NULL |
|    3 | Hrithik    | Roshan   | NULL |
|    4 | Leonardo   | DiCaprio | NULL |
|    5 | Keanu      | Reeves   | NULL |
+------+------------+----------+------+
5 rows in set (0.00 sec)

mysql> UPDATE Actor
    -> SET Pay = Pay + 60000
    -> WHERE a_id IN (SELECT a_id FROM Cast WHERE m_id = (SELECT m_id FROM Movie WHERE title = 'Ram-Lakhan'));
Query OK, 0 rows affected (0.00 sec)
Rows matched: 0  Changed: 0  Warnings: 0

mysql> select * from Actor;
+------+------------+----------+------+
| a_id | f_name     | l_name   | Pay  |
+------+------------+----------+------+
|    1 | Amitabh    | Bachchan | NULL |
|    2 | Dharmendra | Deol     | NULL |
|    3 | Hrithik    | Roshan   | NULL |
|    4 | Leonardo   | DiCaprio | NULL |
|    5 | Keanu      | Reeves   | NULL |
+------+------------+----------+------+
5 rows in set (0.00 sec)

mysql> ALTER TABLE Actor
    -> DROP COLUMN Pay;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> ALTER TABLE Actor
    -> ADD COLUMN Pay INT DEFAULT 60000;
Query OK, 0 rows affected (0.01 sec)
Records: 0  Duplicates: 0  Warnings: 0

mysql> select * from Actor;
+------+------------+----------+-------+
| a_id | f_name     | l_name   | Pay   |
+------+------------+----------+-------+
|    1 | Amitabh    | Bachchan | 60000 |
|    2 | Dharmendra | Deol     | 60000 |
|    3 | Hrithik    | Roshan   | 60000 |
|    4 | Leonardo   | DiCaprio | 60000 |
|    5 | Keanu      | Reeves   | 60000 |
+------+------------+----------+-------+
5 rows in set (0.00 sec)

mysql> UPDATE Actor
    -> SET Pay = Pay + 60000
    -> WHERE a_id IN (SELECT a_id FROM Cast WHERE m_id = (SELECT m_id FROM Movie WHERE title = 'Ram-Lakhan'));
Query OK, 0 rows affected (0.00 sec)
Rows matched: 0  Changed: 0  Warnings: 0

mysql> select * from Actor;
+------+------------+----------+-------+
| a_id | f_name     | l_name   | Pay   |
+------+------------+----------+-------+
|    1 | Amitabh    | Bachchan | 60000 |
|    2 | Dharmendra | Deol     | 60000 |
|    3 | Hrithik    | Roshan   | 60000 |
|    4 | Leonardo   | DiCaprio | 60000 |
|    5 | Keanu      | Reeves   | 60000 |
+------+------------+----------+-------+
5 rows in set (0.00 sec)

mysql> UPDATE Actor
    -> SET Pay = Pay + 60000
    -> WHERE a_id IN (SELECT a_id FROM Cast WHERE m_id = (SELECT m_id FROM Movie WHERE title = 'Sholay'));
Query OK, 2 rows affected (0.00 sec)
Rows matched: 2  Changed: 2  Warnings: 0

mysql> select * from Actor;
+------+------------+----------+--------+
| a_id | f_name     | l_name   | Pay    |
+------+------------+----------+--------+
|    1 | Amitabh    | Bachchan | 120000 |
|    2 | Dharmendra | Deol     | 120000 |
|    3 | Hrithik    | Roshan   |  60000 |
|    4 | Leonardo   | DiCaprio |  60000 |
|    5 | Keanu      | Reeves   |  60000 |
+------+------------+----------+--------+
5 rows in set (0.00 sec)

10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 10 

mysql> SELECT title FROM Movie
    -> WHERE title LIKE 'K%';
+-------+
| title |
+-------+
| K3G   |
+-------+
1 row in set (0.00 sec)

12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 12 

mysql> SELECT AVG(Pay) AS AveragePay
    -> FROM Actor
    -> WHERE a_id IN (SELECT a_id FROM Cast WHERE m_id = (SELECT m_id FROM Movie WHERE title = 'K3G'));
+------------+
| AveragePay |
+------------+
| 60000.0000 |
+------------+
1 row in set (0.00 sec)

13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13  

mysql> SELECT COUNT(DISTINCT a_id) AS TotalActors
    -> FROM Cast
    -> WHERE m_id = (SELECT m_id FROM Movie WHERE title = 'Dilwale');
+-------------+
| TotalActors |
+-------------+
|           0 |
+-------------+
1 row in set (0.00 sec)

mysql> SELECT COUNT(DISTINCT a_id) AS TotalActors
    -> FROM Cast
    -> WHERE m_id = (SELECT m_id FROM Movie WHERE title = 'Inception');
+-------------+
| TotalActors |
+-------------+
|           1 |
+-------------+
1 row in set (0.00 sec)

mysql>